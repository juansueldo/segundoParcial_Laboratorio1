#include "Controller.h"

int controller_loadFromText(char* path , LinkedList* pArrayListBooks)
{
    int verificar;
    int retorno = -1;
    FILE* file = NULL;

    if(pArrayListBooks != NULL)
    {
        file = fopen(path, "r");

        if(file != NULL)
        {
        	verificar = parser_BookFromText(file, pArrayListBooks);
        	if(verificar == 0)
        	{
        		retorno = 0;
        	}

        }
    }

    fclose(file);
    return retorno;
}
int controller_ListBooks(LinkedList* pArrayListBooks)
{
    int retorno = -1;
    int i;
    int j;
    int pantalla = 999;
    int respuesta;
    int respuesta2;
    int id;
    char titulo[MAX_NOMBRE];
    char autor[MAX_NOMBRE];
    float precio;
    char editorial[MAX_NOMBRE];
    int editorialId;
    eBook* pAuxMovie = eBook_new();
    eEditorial* pAuxEditorial = NULL;

    if(pArrayListBooks != NULL)
    {
    	if(ll_len(pArrayListBooks)>0)
    	{
        printf("|*******|**************************************************************|*****************|************|***********************|\n");
        printf("|   ID  |                        TITULO                                |      AUTOR      |   PRECIO   |       EDITORIAL       |\n");
        printf("|*******|**************************************************************|*****************|************|***********************|\n");
        do
        {
        for(i = 0 ; i < ll_len(pArrayListBooks); i++)
        {
        	pAuxMovie = (eBook*)ll_get(pArrayListBooks, i);

        	eBook_getId(pAuxMovie, &id);
        	eBook_getTitulo(pAuxMovie, titulo);
        	eBook_getAutor(pAuxMovie, autor);
        	eBook_getPrecio(pAuxMovie, &precio);
        	eBook_getEditorial(pAuxMovie, &editorialId);
        	for(j = 0; j < 7; j++)
        	{
        		pAuxEditorial = (eEditorial*)ll_get(pArrayListBooks, j);
        		eBook_getEditorialId (pAuxEditorial,editorialId,editorial);
        	}

            printf("| %5d | %60s | %15s | %10.2f |  %20s || %5d |\n", id,titulo,autor, precio,pAuxEditorial->editorialDetalle,editorialId);

            if(i == pantalla)
             {
        		do
        		{
        			respuesta = utn_getRespuesta ("\nPRESIONE [S] PARA MOSTRAR MAS EMPLEADOS: ","\nERROR", 3);
        			pantalla+=999;
        		}while(respuesta != 0);
              }
        	}
        	respuesta2 = utn_getRespuesta ("\nPRESIONE [S] PARA CONTINUAR: ","\nERROR", 3);

        }while(respuesta2 != 0);
        retorno = 0;

    	}
    }
    return retorno;
}
int controller_sort (LinkedList* pArrayListBooks)
{
	int retorno = -1;
	int orden = 0;

	 if(pArrayListBooks != NULL && ll_len(pArrayListBooks) > 0)
	 {
		 ll_sort(pArrayListBooks, eBook_compareByAutor, orden);
		 retorno = 0;
	 }
	 return retorno;
}
int controller_saveAsText(char* path , LinkedList* pArrayListBooks)
{
    FILE* file = NULL;
    int retorno = -1;
    int eBookQTY;
    int i;
    eBook* pAuxBooks;

    if(pArrayListBooks != NULL)
    {
        eBookQTY = ll_len(pArrayListBooks);

        file = fopen(path, "w");

        if(file != NULL
           && eBookQTY > 0 && eBookQTY <= 700
           && fprintf(file, "id,titulo,autor,precio,editorialId\n") != -1)
        {
            for(i = 0; i < eBookQTY; i++)
            {
            	pAuxBooks = (eBook*)ll_get(pArrayListBooks, i);
                if(fprintf(file, "%d,%s,%s,%.2f,%d\n",
                		pAuxBooks->id,
						pAuxBooks->titulo,
						pAuxBooks->autor,
						pAuxBooks->precio,
						pAuxBooks->editorial) == -1)
                {
                    break;
                }

            }
        }

        if(i > 0 && i == eBookQTY)
        {
        	retorno = 0;
        }
    }

    fclose(file);
    free(pAuxBooks);
    return retorno;
}
